import styled from 'styled-components';

interface Props {
  isTop: boolean;
}

const HeaderWrapper = styled.header`
  position: fixed;
  box-sizing: border-box;
  padding: 0 80px;
  display: flex;
  height: 64px;
  width: 100%;
  top: 0;
  overflow-y: scroll;
  align-items: center;
  justify-content: space-between;
  z-index: 1;

  .meta {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 100%;
    z-index: 100;
  }

  .background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transition: all 0.35s;
    opacity: ${({ isTop }: Props) => isTop ? '0' : '1'};
    background-color: ${({ isTop }: Props) => isTop ? 'rgba(69, 90, 100, 0)' : '#455A64'};
  }
  
  .left-container {
    float: left;
    .svg-container {
      color: #FFC107;
      width: 140px;
      @media (min-width: 768px) {
        width: 168px;
      }
    }
  }

  .right-container {
    float: right;
    align-items: center;
    display: flex;
  }
`;

export default HeaderWrapper;

import * as React from 'react';
import { Link } from 'react-router-dom';
import HeaderWrapper from './Header.wrapper';
import Authorized from './Authorized/';
import Unauthorized from './Unauthorized/';
import Svg from 'shared/Svg';
import { isStorageValid } from 'utils/isStorageValid';

interface Props {
  toggleAuthForms: (form: string) => void;
}

interface State {
  isTop: boolean;
}

class Header extends React.Component<Props, State> {
  state = {
    isTop: true
  }
  handleHeader = () => {
    const isTop = window.scrollY < 425;
    if (isTop !== this.state.isTop) {
      this.setState({ isTop });
    }
  }
  componentDidMount() {
    document.addEventListener('scroll', this.handleHeader.bind(this));
  }
  render() {
    const specialHeader: boolean = (location.pathname === '/') && this.state.isTop;
    return (
      <HeaderWrapper isTop={specialHeader}>
      <div className="meta">
        <div className="left-container">
          <Link to="/">
            <Svg className="svg-container" src='logo-horizontal' />
          </Link>
        </div>
        <div className="right-container">
          {isStorageValid('bee-token') ? <Authorized client /> : <Unauthorized {...this.props} />}
        </div>
      </div>
      <div className="background" />
      </HeaderWrapper>
    )
  }
}

export default Header;